# Передан ли аргумент -h или --help для вывода справки
if [[ "$1" == "-h" || "$1" == "--help" ]]; then
    echo "$0 программа"
    echo "$0 создает коллаж из N столбцов и M строк"
    echo "использование $0 N M входного пути к выходному файлу"
    exit 0
fi

# Существует ли директория, указанная в третьем аргументе
if [[ ! -d "$3" ]]; then
    echo "ошибка-такого каталога нет"
    exit 1
fi

images=()

# Цикл по всем файлам в указанной директории
for img in "$3"/*; do
    # Является ли файл изображением
    if file "$img" | grep -qE 'image data'; then
        images+=("$img")  # Добавление изображения в массив
    fi
done

# Подсчет количества изображений в директории
images_in_directory=${#images[@]}

# Вычисление общего размера сетки 
grid_size=$(($1 * $2))
count=0  # Счетчик обработанных изображений

# Достаточно ли изображений для создания коллажа
if [[ $grid_size -gt $images_in_directory ]]; then
    echo "ошибка-недостаточно изображений"
    exit 1
fi

# Если достаточно изображений, создаем временную директорию
if [[ $grid_size -le $images_in_directory ]]; then
    mkdir -p "$3/temp"  # Создание временной директории
    temp_dir="$3/temp"  # Сохранение пути к временной директории

    # Цикл по всем изображениям в массиве
    for img in "${images[@]}"; do
        # Изменение размера изображения и сохранение в временной директории
        convert "$img" -resize 100x100! "$temp_dir/$(basename "$img")"
        count=$((count + 1))  

        # Достигнуто ли максимальное количество изображений для коллажа
        if [[ "$c" -ge "$grid_size" ]]; then
            break  
        fi
    done

    # Создание коллажа из изображений во временной директории
    montage "$temp_dir/*" -tile "${1}x${2}" -geometry +0+0 "$4"
    
    # Удаление временной директории после завершения работы
    rm -rf "$temp_dir"
    exit 0  
fi
