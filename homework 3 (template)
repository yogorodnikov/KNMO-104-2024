#!/bin/bash
#скрипт должен выполняться с помощью интерпретатора Bash

# Проверка на наличие параметров для справки
if [[ "$1" == "--help" || "$1" == "--h" ]]; then
    echo "Usage: $0 [directory]"
    echo "Check for executable files in the directories of PATH or in the specified directory." #Проверить наличие исполн файлов в каталогах PATH или в указ каталоге.
    exit 0
fi
#передан ли в скрипт аргумент --help или --h. Если да, то выводится справка
#$0 – это имя самого скрипта

# Используем переданную директорию или PATH по умолчанию
directory="${1:-$PATH}"

#задаем переменную directory. Если передан аргумент (например, путь к директории), он будет использоваться. 
#Если нет, будет использоваться значение переменной окружения PATH, 
#которая содержит список директорий, в которых система ищет исполняемые файлы.

# Переменная для хранения директорий
valid_dirs=()
#пустой массив valid_dirs, который будет использоваться для хранения директорий, содержащих исполняемые файлы.

# Проверка каждой директории на наличие исполняемых файлов
for dir in $(echo "$directory" | tr ':' ' '); do   

#tr - для замены
#проходимся по всем директориям, которые указаны в переменной directory
 #замена двоеточия (:) на пробелы, сделать список директорий более удобным для обработки в цикле

    if [ -d "$dir" ] && compgen -x < "$dir" > /dev/null; then #-d Указать директорию. #-x Исключить объект.

#проверка для всех дир. #-d "$dir" – проверяет, является ли dir директорией.
#compgen - генерирует список имен команд (исполняемых файлов) из указанной дир 
#Если в дир есть исполняемые файлы, команда завершится. Вывод перенаправляется в /dev/null, чтобы не отображать его на экране.

        valid_dirs+=("$dir")  # Добавляем директорию, если исполняемые файлы найдены
    fi
done

# Вывод очищенного PATH
echo "${valid_dirs[*]}"
#Вывод очищ PATH, содержащий только директории с исполняемыми файлами. 
